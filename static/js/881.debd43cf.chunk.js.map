{"version":3,"file":"static/js/881.debd43cf.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","redux/selectors.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding-right: 8px;\n  padding-left: 8px;\n  display: flex;\n  gap: 8px;\n  min-width: 300px;\n  align-items: center;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n  min-width: 100px;\n`;\n\nexport const Tel = styled.p`\n  color: grey;\n  min-width: 100px;\n`;\n\nexport const Button = styled.button`\n  margin-left: auto;\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    outline: none;\n    box-shadow: 0 4px 10px rgba(255, 56, 56, 1);\n    border-color: #ff3838;\n    background-color: #ff3838;\n  }\n`;\n","import { AiOutlineDelete } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport { Item, Name, Tel, Button } from './ContactItem.styled';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\n\nexport const ContactItem = ({ name, number, contactId }) => {\n  const [deleteContact, { isLoading: isDeliting }] = useDeleteContactMutation();\n\n  return (\n    <Item>\n      <Name>{name}:</Name>\n      <Tel>{number}</Tel>\n      <Button type=\"button\" onClick={() => deleteContact(contactId)}>\n        {isDeliting ? 'Deliting...' : <AiOutlineDelete size={18} />}\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const StyledContainer = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n\n  h3 {\n    font-size: 24px;\n    margin-bottom: 8px;\n    position: relative;\n  }\n\n  h3::after {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 1px;\n    background-color: #ccc;\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n  }\n`;\n","export const selectContacts = state => state.contacts;\n\nexport const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.1);\n  z-index: 1200;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => (\n  <LoaderWrapper>\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  </LoaderWrapper>\n);\n","import { ContactItem } from 'components/ContactItem';\nimport { List, StyledContainer } from './ContactList.styled';\nimport { useFetchContactsQuery } from 'redux/contactsSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { Loader } from 'components/Loader';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const { data: contacts, isFetching, error } = useFetchContactsQuery();\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return (\n      contacts?.filter(\n        ({ name, number }) =>\n          name.toLowerCase().includes(normalizedFilter) ||\n          number.includes(normalizedFilter)\n      ) || []\n    );\n  };\n\n  const groupContactsByFirstLetter = () => {\n    return filteredContacts().reduce((groupedContacts, contact) => {\n      const firstLetter = contact.name[0].toUpperCase();\n      if (!groupedContacts[firstLetter]) {\n        groupedContacts[firstLetter] = [];\n      }\n      groupedContacts[firstLetter].push(contact);\n      return groupedContacts;\n    }, {});\n  };\n\n  const sortedContacts = groupContactsByFirstLetter(filteredContacts());\n  const sortedLetters = Object.keys(sortedContacts).sort();\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      {contacts && <p>Total contacts: {contacts.length}</p>}\n      {isFetching && <Loader />}\n      {error ? (\n        <p>Oh no, there was an error</p>\n      ) : (\n        <>\n          {sortedLetters.map(letter => (\n            <StyledContainer key={letter}>\n              <h3>{letter}</h3>\n              <List>\n                {sortedContacts[letter].map(({ name, number, id }) => (\n                  <ContactItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    contactId={id}\n                  />\n                ))}\n              </List>\n            </StyledContainer>\n          ))}\n        </>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  > div {\n    display: flex;\n    align-items: center;\n    background-color: white;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    transition: border-color 0.3s;\n\n    &:focus-within {\n      border-color: #337ab7;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  flex: 1;\n  padding: 8px;\n  border: none;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Label>\n      <div>\n        <Input\n          type=\"text\"\n          onChange={e => dispatch(setFilter(e.currentTarget.value))}\n          value={filter}\n          placeholder={`Find contact `}\n        />\n        <AiOutlineSearch />\n      </div>\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Phonebook = styled.section``;\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  text-decoration: none;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","import { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Phonebook, StyledLink, StyledContainer } from './Contacts.styled';\n\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nconst Contacts = () => {\n  return (\n    <Phonebook>\n      <StyledContainer>\n        <h1>Phonebook</h1>\n        <StyledLink to=\"/contacts/addcontact\">\n          <AiOutlineUserAdd />\n        </StyledLink>\n      </StyledContainer>\n      <Filter />\n      <ContactList />\n    </Phonebook>\n  );\n};\n\nexport default Contacts;\n"],"names":["Item","styled","Name","Tel","Button","ContactItem","name","number","contactId","useDeleteContactMutation","deleteContact","isDeliting","isLoading","type","onClick","size","List","StyledContainer","selectFilter","state","filter","LoaderWrapper","Loader","strokeColor","strokeWidth","animationDuration","width","visible","ContactList","useSelector","useFetchContactsQuery","contacts","data","isFetching","error","filteredContacts","normalizedFilter","toLowerCase","includes","sortedContacts","reduce","groupedContacts","contact","firstLetter","toUpperCase","push","sortedLetters","Object","keys","sort","length","map","letter","id","Label","Input","Filter","dispatch","useDispatch","onChange","e","setFilter","currentTarget","value","placeholder","Phonebook","StyledLink","Link","to"],"sourceRoot":""}