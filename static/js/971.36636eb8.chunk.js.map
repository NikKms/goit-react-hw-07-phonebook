{"version":3,"file":"static/js/971.36636eb8.chunk.js","mappings":"wSAGaA,EAAQC,EAAAA,EAAAA,MAAH,0GAOLC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,2SAeVG,EAAmBH,EAAAA,EAAAA,OAAH,4fA4BhBI,GAAYJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,2GAOTM,EAAWN,EAAAA,EAAAA,IAAH,+EAMRO,EAAwBP,EAAAA,EAAAA,IAAH,4E,6BCpD5BQ,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAGJC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CJ,KAAMG,EAAAA,KACHE,QACC,+CACA,0FAEDC,SAAS,oBACZL,OAAQE,EAAAA,KACLE,QACC,iBACA,gGAEDC,SAAS,wBAGDC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEMC,EAAY,mCAAG,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,kBAEXH,EAAW,CACfX,KAAMa,EAAOb,KACbC,OAAQY,EAAOZ,SAJA,OAMjBa,IACAN,EAAS,aAPQ,gDASjBO,QAAQC,MAAM,8BAAd,MATiB,yDAAH,wDAalB,OACE,+BACE,SAAC,KAAD,CACEjB,cAAeA,EACfkB,SAAUL,EACVV,iBAAkBA,EAHpB,UAKE,UAACP,EAAD,YACE,UAACL,EAAD,YACE,SAACE,EAAD,CAAY0B,KAAK,OAAOlB,KAAK,OAAOmB,YAAY,UAChD,SAAC,KAAD,CAAcnB,KAAK,OAAOoB,UAAWvB,QAEvC,UAACP,EAAD,YACE,SAACE,EAAD,CAAY0B,KAAK,MAAMlB,KAAK,SAASmB,YAAY,WACjD,SAAC,KAAD,CAAcnB,KAAK,SAASoB,UAAWvB,QAEzC,SAACC,EAAD,WACE,SAACJ,EAAD,CAAkBwB,KAAK,SAAvB,SAAgC,gBAM3C,ECxEYG,EAAuB9B,EAAAA,EAAAA,QAAH,qOAYpB+B,EAAyB/B,EAAAA,EAAAA,IAAH,yPAYtBgC,EAAmBhC,EAAAA,EAAAA,OAAH,4fCK7B,IACA,EAAe,IAA0B,4DCIzC,EA1BmB,WACjB,IAAMiC,GAAWC,EAAAA,EAAAA,MACXjB,GAAWC,EAAAA,EAAAA,MAWjB,OACE,UAACY,EAAD,YACE,SAACE,EAAD,CAAkBL,KAAK,SAASQ,QAXf,WACfF,EAASG,MACXnB,EAASgB,EAASG,MAAMC,MAI1BpB,EAAS,YACV,EAIG,SAAuD,YAGvD,SAACc,EAAD,WACE,gBAAKO,IAAKC,EAAWC,IAAI,iBAAiBC,MAAO,SAEnD,SAACzB,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/AddContact/AddContact.styled.js","images/contact.svg","pages/AddContact/AddContact.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Label = styled.label`\n  font-size: 24px;\n  color: #444;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const InputField = styled(Field)`\n  padding: 12px;\n  border: 2px solid #ccc;\n  border-radius: 8px;\n  font-size: 18px;\n  margin-right: auto;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: #337ab7;\n    box-shadow: 0 4px 10px rgba(0, 0, 255, 0.3);\n  }\n`;\n\nexport const FormSubmitButton = styled.button`\n  margin-right: auto;\n  padding: 8px 16px;\n  background-color: transparent;\n  color: #333;\n  border: none;\n  border-radius: 8px;\n  font-size: 18px;\n  cursor: pointer;\n  position: relative;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: #337ab7;\n    border-radius: 2px;\n  }\n`;\n\nexport const InputForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 20px;\n`;\n\nexport const ErrorMsg = styled.div`\n  font-size: 14px;\n  color: red;\n  margin-top: 4px;\n`;\n\nexport const SubmitButtonContainer = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 8px;\n`;\n","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  FormSubmitButton,\n  Label,\n  InputForm,\n  InputField,\n  ErrorMsg,\n  SubmitButtonContainer,\n} from './ContactForm.styled';\nimport { useAddContactMutation } from 'redux/contactsSlice';\nimport { useNavigate } from 'react-router-dom';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я0-9'-\\s]+$/,\n      'Name may contain only letters, Cyrillic letters, digits, apostrophe, dash, and spaces.'\n    )\n    .required('Name is required'),\n  number: Yup.string()\n    .matches(\n      /^[0-9\\s+()-]+$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Number is required'),\n});\n\nexport const ContactForm = () => {\n  const navigate = useNavigate();\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await addContact({\n        name: values.name,\n        number: values.number,\n      });\n      resetForm();\n      navigate('/contacts');\n    } catch (error) {\n      console.error('Error while adding contact:', error);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        <InputForm>\n          <Label>\n            <InputField type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <ErrorMessage name=\"name\" component={ErrorMsg} />\n          </Label>\n          <Label>\n            <InputField type=\"tel\" name=\"number\" placeholder=\"Phone\" />\n            <ErrorMessage name=\"number\" component={ErrorMsg} />\n          </Label>\n          <SubmitButtonContainer>\n            <FormSubmitButton type=\"submit\">ADD</FormSubmitButton>\n          </SubmitButtonContainer>\n        </InputForm>\n      </Formik>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledAddContactPage = styled.section`\n  padding: 16px;\n  background-color: #f1f1f1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n  border-radius: 15px;\n  position: relative;\n`;\n\nexport const ContactAvatarContainer = styled.div`\n  width: 240px;\n  height: 250px;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: #cfcccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\nexport const StyledLinkCancel = styled.button`\n  margin-right: auto;\n  padding: 8px 16px;\n  background-color: transparent;\n  color: #333;\n  border: none;\n  border-radius: 8px;\n  font-size: 18px;\n  cursor: pointer;\n  position: relative;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: #337ab7;\n    border-radius: 2px;\n  }\n`;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgContact(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 1322.667,\n    height: 1706.667,\n    viewBox: \"0 0 992 1280\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M471 1.1C409.3 6.9 352.7 33 308.6 76c-24.1 23.5-40.6 46-54.6 74.5-20.7 42.2-29 80.5-27.7 128 .8 29.1 4.6 51 13.2 77 29.1 87.4 101.1 154.3 190.2 176.9 73.6 18.7 152.8 5.1 215.6-36.8 16.7-11.2 26.7-19.4 42.2-35 51.1-51.3 78.6-117.9 78.5-190.1-.1-43.9-8.6-80.5-28-120.1C703 79.2 636.5 25.9 559.5 7.6 531.3.8 498.8-1.6 471 1.1zM466.5 566.1c-34.3 2.7-67.2 9.4-100 20.4-104.8 35-199.2 114.2-265.3 222.7-59.7 98-93.6 211.4-100.2 335.3-1.6 29.8-1.3 42.2.9 47.2 15.7 34.4 124.5 64.6 285.6 79.2 71.7 6.5 121.4 8.6 208.5 8.5 66.5 0 89.1-.5 140.5-3.4 70.1-4 141.3-11.9 197-22 90-16.3 145.7-38.5 156.6-62.3 2.2-5 2.5-17.4.9-47.2-7.5-139.9-50.5-268.2-124.6-372.2C771.7 639.6 635.6 564 493.6 565.1c-9.4.1-21.6.5-27.1 1z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgContact);\nexport default __webpack_public_path__ + \"static/media/contact.921339588f48224f182f7bcc3f283b05.svg\";\nexport { ForwardRef as ReactComponent };","import { ContactForm } from 'components/ContactForm';\nimport {\n  ContactAvatarContainer,\n  StyledAddContactPage,\n  StyledLinkCancel,\n} from './AddContact.styled';\n\nimport avatarSVG from '../../images/contact.svg';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst AddContact = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    if (location.state) {\n      navigate(location.state.from);\n      return;\n    }\n\n    navigate('/contacts');\n  };\n\n  return (\n    <StyledAddContactPage>\n      <StyledLinkCancel type=\"button\" onClick={handleGoBack}>\n        CANCEL\n      </StyledLinkCancel>\n      <ContactAvatarContainer>\n        <img src={avatarSVG} alt=\"Contact Avatar\" width={150} />\n      </ContactAvatarContainer>\n      <ContactForm />\n    </StyledAddContactPage>\n  );\n};\n\nexport default AddContact;\n"],"names":["Label","styled","InputField","Field","FormSubmitButton","InputForm","Form","ErrorMsg","SubmitButtonContainer","initialValues","name","number","validationSchema","Yup","shape","matches","required","ContactForm","navigate","useNavigate","useAddContactMutation","addContact","handleSubmit","values","resetForm","console","error","onSubmit","type","placeholder","component","StyledAddContactPage","ContactAvatarContainer","StyledLinkCancel","location","useLocation","onClick","state","from","src","avatarSVG","alt","width"],"sourceRoot":""}